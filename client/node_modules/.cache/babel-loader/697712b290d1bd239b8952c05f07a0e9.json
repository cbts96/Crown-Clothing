{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nvar config = {\n  apiKey: \"AIzaSyA71JwlxOcraVojx5BjLT3fHUDT68t-ik0\",\n  authDomain: \"crown-clothing-v3.firebaseapp.com\",\n  databaseURL: \"https://crown-clothing-v3.firebaseio.com\",\n  projectId: \"crown-clothing-v3\",\n  storageBucket: \"crown-clothing-v3.appspot.com\",\n  messagingSenderId: \"791966890169\",\n  appId: \"1:791966890169:web:dec68759905c7886908368\",\n  measurementId: \"G-8Z1TLNZ8LJ\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`user/${userAuth.uid}`);\n  const collectionRef = firestore.collection(\"user\");\n  const snapshot = await userRef.get();\n  const collectionSnapshot = await collectionRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionData\n      });\n    } catch (error) {\n      console.log(\"error creating error\", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = (collectionKey, object);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["D:/Reactjs 2/crown-clothing-v3/src/Firebase/FirebaseUtil.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionData","userRef","firestore","doc","uid","collectionRef","collection","snapshot","get","collectionSnapshot","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","object","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,IAAIC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,mCAFD;AAGXC,EAAAA,WAAW,EAAE,0CAHF;AAIXC,EAAAA,SAAS,EAAE,mBAJA;AAKXC,EAAAA,aAAa,EAAE,+BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAb;AAUAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB;AAEA,OAAO,MAAMU,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,YAAjB,KAAkC;AACzE,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,QAAOJ,QAAQ,CAACK,GAAI,EAAnC,CAAhB;AACA,QAAMC,aAAa,GAACH,SAAS,CAACI,UAAV,CAAqB,MAArB,CAApB;AACA,QAAMC,QAAQ,GAAG,MAAMN,OAAO,CAACO,GAAR,EAAvB;AACA,QAAMC,kBAAkB,GAAC,MAAMJ,aAAa,CAACG,GAAd,EAA/B;;AACA,MAAI,CAACD,QAAQ,CAACG,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBb,QAA/B;AACA,UAAMc,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMb,OAAO,CAACc,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGb;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOgB,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,KAAK,CAACG,OAA1C;AACD;AACF;;AACD,SAAOlB,OAAP;AACD,CAtBM;AAuBP,OAAO,MAAMmB,yBAAyB,IAAEC,aAAa,EAACC,MAAhB,CAA/B;AACP,OAAO,MAAMC,IAAI,GAAGpC,QAAQ,CAACoC,IAAT,EAAb;AACP,OAAO,MAAMrB,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB;AAEP,MAAMsB,QAAQ,GAAG,IAAIrC,QAAQ,CAACoC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AACP,eAAerC,QAAf","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nvar config = {\r\n  apiKey: \"AIzaSyA71JwlxOcraVojx5BjLT3fHUDT68t-ik0\",\r\n  authDomain: \"crown-clothing-v3.firebaseapp.com\",\r\n  databaseURL: \"https://crown-clothing-v3.firebaseio.com\",\r\n  projectId: \"crown-clothing-v3\",\r\n  storageBucket: \"crown-clothing-v3.appspot.com\",\r\n  messagingSenderId: \"791966890169\",\r\n  appId: \"1:791966890169:web:dec68759905c7886908368\",\r\n  measurementId: \"G-8Z1TLNZ8LJ\",\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionData) => {\r\n  if (!userAuth) return;\r\n  const userRef = firestore.doc(`user/${userAuth.uid}`);\r\n  const collectionRef=firestore.collection(\"user\");\r\n  const snapshot = await userRef.get();\r\n  const collectionSnapshot=await collectionRef.get();\r\n  if (!snapshot.exists) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionData,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error creating error\", error.message);\r\n    }\r\n  }\r\n  return userRef;\r\n};\r\nexport const addCollectionAndDocuments=(collectionKey,object)\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: \"select_account\" });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport actionTypes from \"../User/actionTypes\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from \"./userAction\";\nimport { auth, createUserProfileDocument, googleProvider, getCurrentUser } from \"../../Firebase/FirebaseUtil\";\nexport function* getSnapshot(userAuth, addtionData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, addtionData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshot(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshot(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshot(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess(signOut));\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n;\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionData\n  }\n}) {\n  yield getSnapshot(user, additionData);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(actionTypes.GOOGLESIGNINSTART, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(actionTypes.EMAILSIGNINSTART, signInWithEmail);\n}\nexport function* onCheckUserLogin() {\n  yield takeLatest(actionTypes.CHECKUSERSEESION, isUserAuthenticated);\n}\nexport function* onSignoutStart() {\n  yield takeLatest(actionTypes.SIGNOUTSTART, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest;\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserLogin), call(onSignoutStart)]);\n}","map":{"version":3,"sources":["D:/Reactjs 2/crown-clothing-v3/src/Redux/User/userSaga.js"],"names":["put","takeLatest","all","call","actionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","auth","createUserProfileDocument","googleProvider","getCurrentUser","getSnapshot","userAuth","addtionData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","additionData","signInAfterSignUp","onGoogleSignInStart","GOOGLESIGNINSTART","onEmailSignInStart","EMAILSIGNINSTART","onCheckUserLogin","CHECKUSERSEESION","onSignoutStart","SIGNOUTSTART","onSignUpStart","userSaga"],"mappings":"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","sourcesContent":["import { put, takeLatest, all, call } from \"redux-saga/effects\";\r\nimport actionTypes from \"../User/actionTypes\";\r\nimport { signInSuccess, signInFailure, signOutSuccess,signOutFailure,signUpSuccess,signUpFailure } from \"./userAction\";\r\nimport {\r\n  auth,\r\n  createUserProfileDocument,\r\n  googleProvider,\r\n  getCurrentUser\r\n} from \"../../Firebase/FirebaseUtil\";\r\n\r\nexport function* getSnapshot(userAuth,addtionData) {\r\n  try {\r\n    const userRef = yield call(createUserProfileDocument, userAuth,addtionData);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    yield getSnapshot(user);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\nexport function* signInWithEmail({payload:{email, password}}) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield getSnapshot(user);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* isUserAuthenticated(){\r\n  try{\r\n    const userAuth=yield getCurrentUser();\r\n    if(!userAuth) return;\r\n    yield getSnapshot(userAuth);\r\n  }catch(error){\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function * signOut(){\r\n  try{\r\n    yield auth.signOut();\r\n    yield put(signOutSuccess(signOut))\r\n  }catch(error){\r\n    yield put(signOutFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signUp({payload:{email,password,displayName}}){\r\n  try {\r\n    const { user } = yield auth.createUserWithEmailAndPassword(\r\n      email,\r\n      password\r\n    );\r\n\r\n    yield put(signUpSuccess({user,additionData:{displayName}}))\r\n      \r\n    \r\n  } catch (error) {\r\n    yield put(signUpFailure(error))\r\n  }\r\n};\r\n\r\nexport function * signInAfterSignUp({payload:{user,additionData}}){\r\n  yield getSnapshot(user,additionData)\r\n}\r\n\r\n\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(actionTypes.GOOGLESIGNINSTART, signInWithGoogle);\r\n}\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(actionTypes.EMAILSIGNINSTART, signInWithEmail);\r\n}\r\n\r\nexport function * onCheckUserLogin(){\r\n  yield takeLatest(actionTypes.CHECKUSERSEESION,isUserAuthenticated)\r\n}\r\n\r\nexport function* onSignoutStart(){\r\n  yield takeLatest(actionTypes.SIGNOUTSTART,signOut)\r\n}\r\n\r\nexport function* onSignUpStart(){\r\n  yield takeLatest\r\n}\r\nexport function* userSaga() {\r\n  yield all([call(onGoogleSignInStart),call(onEmailSignInStart),call(onCheckUserLogin),call(onSignoutStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Reactjs 2\\\\crown-clothing-v3\\\\src\\\\components\\\\SignIn\\\\SignIn.js\";\nimport React, { useState } from \"react\";\nimport FormInput from \"../FormInput/FormInput\";\nimport \"./SignIn.scss\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport { connect } from \"react-redux\";\nimport { googleSignInStart, emailSignInStart } from \"../../Redux/User/userAction\";\n\nconst SignIn = ({\n  signInWithEmailSaga\n}) => {\n  const [userCredential, setUserCredential] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = userCredential;\n    signInWithEmailSaga(email, password);\n  };\n\n  const handleChange = event => {\n    setUserCredential({ ...userCredential,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const {\n    signInWithGoogleSaga\n  } = this.props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Sign In with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form-signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    handleChange: handleChange,\n    value: this.state.email,\n    name: \"email\",\n    required: true,\n    label: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    handleChange: this.handleChange,\n    name: \"password\",\n    value: this.state.password,\n    label: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    name: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"SIGN IN\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    name: \"submit\",\n    onClick: signInWithGoogleSaga,\n    isGoogleSignin: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"SIGN IN WITH GOOGLE\"))));\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  signInWithGoogleSaga: () => dispatch(googleSignInStart()),\n  signInWithEmailSaga: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["D:/Reactjs 2/crown-clothing-v3/src/components/SignIn/SignIn.js"],"names":["React","useState","FormInput","CustomButton","connect","googleSignInStart","emailSignInStart","SignIn","signInWithEmailSaga","userCredential","setUserCredential","email","password","handleSubmit","e","preventDefault","handleChange","event","target","name","value","signInWithGoogleSaga","props","state","mapDispatchToProps","dispatch","ownProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport FormInput from \"../FormInput/FormInput\";\r\nimport \"./SignIn.scss\";\r\nimport CustomButton from \"../CustomButton/CustomButton\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  googleSignInStart,\r\n  emailSignInStart,\r\n} from \"../../Redux/User/userAction\";\r\n\r\nconst SignIn=({signInWithEmailSaga})=> {\r\n  const [userCredential,setUserCredential]=useState({email: \"\",\r\n  password: \"\",})\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = userCredential;\r\n   \r\n    signInWithEmailSaga(email, password);\r\n  };\r\n  const handleChange = (event) => {\r\n    setUserCredential({ ...userCredential,[event.target.name]: event.target.value });\r\n  };\r\n  \r\n    const { signInWithGoogleSaga } = this.props;\r\n    return (\r\n      <div className=\"signin\">\r\n        <h1>I already have an account</h1>\r\n        <div className=\"title\">Sign In with your email and password</div>\r\n        <form onSubmit={handleSubmit} className=\"form-signin\">\r\n          <FormInput\r\n            type=\"email\"\r\n            handleChange={handleChange}\r\n            value={this.state.email}\r\n            name=\"email\"\r\n            required\r\n            label=\"email\"\r\n          />\r\n\r\n          <FormInput\r\n            type=\"password\"\r\n            handleChange={this.handleChange}\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            label=\"password\"\r\n            required\r\n          />\r\n          <div className=\"buttons\">\r\n            <CustomButton type=\"submit\" name=\"submit\">\r\n              SIGN IN\r\n            </CustomButton>\r\n            <CustomButton\r\n              type=\"button\"\r\n              name=\"submit\"\r\n              onClick={signInWithGoogleSaga}\r\n              isGoogleSignin\r\n            >\r\n              SIGN IN WITH GOOGLE\r\n            </CustomButton>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  signInWithGoogleSaga: () => dispatch(googleSignInStart()),\r\n  signInWithEmailSaga: (email, password) =>\r\n    dispatch(emailSignInStart({ email, password })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}
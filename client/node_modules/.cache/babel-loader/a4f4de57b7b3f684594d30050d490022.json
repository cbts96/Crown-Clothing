{"ast":null,"code":"import { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport actionTypes from \"../User/actionTypes\";\nimport { signInSuccess, signInFailure } from \"./userAction\";\nimport { auth, createUserProfileDocument, googleProvider } from \"../../Firebase/FirebaseUtil\";\nexport function* getSnapshot(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshot(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield put(getSnapshot(user));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(actionTypes.GOOGLESIGNINSTART, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(actionTypes.GOOGLESIGNINSTART, signInWithGoogle);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["D:/Reactjs 2/crown-clothing-v3/src/Redux/User/userSaga.js"],"names":["put","takeLatest","all","call","actionTypes","signInSuccess","signInFailure","auth","createUserProfileDocument","googleProvider","getSnapshot","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLESIGNINSTART","onEmailSignInStart","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,cAA7C;AACA,SACEC,IADF,EAEEC,yBAFF,EAGEC,cAHF,QAIO,6BAJP;AAMA,OAAO,UAAUC,WAAV,CAAsBC,QAAtB,EAAgC;AACrC,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACK,yBAAD,EAA4BG,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACK,aAAa,CAAC;AAAEU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACM,aAAa,CAACW,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,IAAI,CAACa,eAAL,CAAqBX,cAArB,CAAvB;AACA,UAAMC,WAAW,CAACS,IAAD,CAAjB;AACD,GAHD,CAGE,OAAOF,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACM,aAAa,CAACW,KAAD,CAAd,CAAT;AACD;AACF;AACD,OAAO,UAAUI,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAT,CAA1B,EAAuD;AAC5D,MAAI;AACF,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMZ,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMxB,GAAG,CAACU,WAAW,CAACS,IAAD,CAAZ,CAAT;AACD,GAHD,CAGE,OAAOF,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACM,aAAa,CAACW,KAAD,CAAd,CAAT;AACD;AACF;AACD,OAAO,UAAUS,mBAAV,GAAgC;AACrC,QAAMzB,UAAU,CAACG,WAAW,CAACuB,iBAAb,EAAgCT,gBAAhC,CAAhB;AACD;AACD,OAAO,UAAUU,kBAAV,GAA+B;AACpC,QAAM3B,UAAU,CAACG,WAAW,CAACuB,iBAAb,EAAgCT,gBAAhC,CAAhB;AACD;AAED,OAAO,UAAUW,QAAV,GAAqB;AAC1B,QAAM3B,GAAG,CAAC,CAACC,IAAI,CAACuB,mBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { put, takeLatest, all, call } from \"redux-saga/effects\";\r\nimport actionTypes from \"../User/actionTypes\";\r\nimport { signInSuccess, signInFailure } from \"./userAction\";\r\nimport {\r\n  auth,\r\n  createUserProfileDocument,\r\n  googleProvider,\r\n} from \"../../Firebase/FirebaseUtil\";\r\n\r\nexport function* getSnapshot(userAuth) {\r\n  try {\r\n    const userRef = yield call(createUserProfileDocument, userAuth);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    yield getSnapshot(user);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\nexport function* signInWithEmail({payload:{email, password}}) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield put(getSnapshot(user));\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(actionTypes.GOOGLESIGNINSTART, signInWithGoogle);\r\n}\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(actionTypes.GOOGLESIGNINSTART, signInWithGoogle);\r\n}\r\n\r\nexport function* userSaga() {\r\n  yield all([call(onGoogleSignInStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
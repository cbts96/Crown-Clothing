{"ast":null,"code":"import { actionsTypes } from \"./actionTypes\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../Firebase/FirebaseUtil\";\nexport const FetchCollectionStart = () => ({\n  type: actionsTypes.FETCHCOLLECTIONSSTARTS\n});\nexport const FetchCollectionSuccess = collectionMap => ({\n  type: actionsTypes.FETCHCOLLECTIONSSSUCCESS,\n  payload: collectionMap\n});\nexport const FetchCollectionFailure = errorMessage => ({\n  type: actionsTypes.FETCHCOLLECTIONSFAILURE,\n  payload: errorMessage\n});\nexport const FetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(FetchCollectionStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      dispatch(FetchCollectionSuccess(collectionMap));\n    }).catch(error => dispatch(FetchCollectionFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["D:/Reactjs 2/crown-clothing-v3/src/Redux/Shop/shopAction.js"],"names":["actionsTypes","firestore","convertCollectionSnapshotToMap","FetchCollectionStart","type","FETCHCOLLECTIONSSTARTS","FetchCollectionSuccess","collectionMap","FETCHCOLLECTIONSSSUCCESS","payload","FetchCollectionFailure","errorMessage","FETCHCOLLECTIONSFAILURE","FetchCollectionStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,SACEC,SADF,EAEEC,8BAFF,QAGO,6BAHP;AAKA,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACzCC,EAAAA,IAAI,EAAEJ,YAAY,CAACK;AADsB,CAAP,CAA7B;AAGP,OAAO,MAAMC,sBAAsB,GAAIC,aAAD,KAAoB;AACxDH,EAAAA,IAAI,EAAEJ,YAAY,CAACQ,wBADqC;AAExDC,EAAAA,OAAO,EAAEF;AAF+C,CAApB,CAA/B;AAIP,OAAO,MAAMG,sBAAsB,GAAIC,YAAD,KAAmB;AACvDP,EAAAA,IAAI,EAAEJ,YAAY,CAACY,uBADoC;AAEvDH,EAAAA,OAAO,EAAEE;AAF8C,CAAnB,CAA/B;AAIP,OAAO,MAAME,yBAAyB,GAAG,MAAM;AAC7C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,oBAAoB,EAArB,CAAR;AAEAY,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMZ,aAAa,GAAGL,8BAA8B,CAACiB,QAAD,CAApD;AACAL,MAAAA,QAAQ,CAACR,sBAAsB,CAACC,aAAD,CAAvB,CAAR;AACD,KALH,EAMGa,KANH,CAMUC,KAAD,IAAWP,QAAQ,CAACJ,sBAAsB,CAACW,KAAK,CAACC,OAAP,CAAvB,CAN5B;AAOD,GAXD;AAYD,CAbM","sourcesContent":["import { actionsTypes } from \"./actionTypes\";\r\nimport {\r\n  firestore,\r\n  convertCollectionSnapshotToMap,\r\n} from \"../../Firebase/FirebaseUtil\";\r\n\r\nexport const FetchCollectionStart = () => ({\r\n  type: actionsTypes.FETCHCOLLECTIONSSTARTS,\r\n});\r\nexport const FetchCollectionSuccess = (collectionMap) => ({\r\n  type: actionsTypes.FETCHCOLLECTIONSSSUCCESS,\r\n  payload: collectionMap,\r\n});\r\nexport const FetchCollectionFailure = (errorMessage) => ({\r\n  type: actionsTypes.FETCHCOLLECTIONSFAILURE,\r\n  payload: errorMessage,\r\n});\r\nexport const FetchCollectionStartAsync = () => {\r\n  return (dispatch) => {\r\n    const collectionRef = firestore.collection(\"collections\");\r\n    dispatch(FetchCollectionStart());\r\n\r\n    collectionRef\r\n      .get()\r\n      .then((snapshot) => {\r\n        const collectionMap = convertCollectionSnapshotToMap(snapshot);\r\n        dispatch(FetchCollectionSuccess(collectionMap));\r\n      })\r\n      .catch((error) => dispatch(FetchCollectionFailure(error.message)));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
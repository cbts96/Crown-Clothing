{"ast":null,"code":"import { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport actionTypes from \"../User/actionTypes\";\nimport { signInSuccess, signInFailure } from \"./userAction\";\nimport { auth, createUserProfileDocument, googleProvider } from \"../../Firebase/FirebaseUtil\";\nexport function* getSnapshot(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshot(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail(email, password) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield put(getSnapshot(user));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(actionTypes.GOOGLESIGNINSTART, signInWithGoogle);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["D:/Reactjs 2/crown-clothing-v3/src/Redux/User/userSaga.js"],"names":["put","takeLatest","all","call","actionTypes","signInSuccess","signInFailure","auth","createUserProfileDocument","googleProvider","getSnapshot","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLESIGNINSTART","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,cAA7C;AACA,SACEC,IADF,EAEEC,yBAFF,EAGEC,cAHF,QAIO,6BAJP;AAMA,OAAO,UAAUC,WAAV,CAAsBC,QAAtB,EAA+B;AAClC,MAAG;AACC,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACK,yBAAD,EAA4BG,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CACPK,aAAa,CAAC;AAAEU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADN,CAAT;AAEH,GALD,CAKC,OAAMC,KAAN,EAAY;AACT,UAAMjB,GAAG,CAACM,aAAa,CAACW,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,IAAI,CAACa,eAAL,CAAqBX,cAArB,CAAvB;AACD,UAAMC,WAAW,CAACS,IAAD,CAAjB;AACA,GAHD,CAGE,OAAOF,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACM,aAAa,CAACW,KAAD,CAAd,CAAT;AACD;AACF;AACD,OAAO,UAAUI,eAAV,CAA0BC,KAA1B,EAAgCC,QAAhC,EAAyC;AAC5C,MAAG;AACC,UAAM;AAACJ,MAAAA;AAAD,QAAO,MAAMZ,IAAI,CAACiB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CAAnB;AACA,UAAMvB,GAAG,CAACU,WAAW,CAACS,IAAD,CAAZ,CAAT;AACH,GAHD,CAIA,OAAMF,KAAN,EAAY;AACR,UAAMjB,GAAG,CAACM,aAAa,CAACW,KAAD,CAAd,CAAT;AACH;AACJ;AACD,OAAO,UAAUQ,mBAAV,GAAgC;AACrC,QAAMxB,UAAU,CAACG,WAAW,CAACsB,iBAAb,EAAgCR,gBAAhC,CAAhB;AACD;AACD,OAAO,UAAUS,QAAV,GAAqB;AAC1B,QAAMzB,GAAG,CAAC,CAACC,IAAI,CAACsB,mBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { put, takeLatest, all, call } from \"redux-saga/effects\";\r\nimport actionTypes from \"../User/actionTypes\";\r\nimport { signInSuccess, signInFailure } from \"./userAction\";\r\nimport {\r\n  auth,\r\n  createUserProfileDocument,\r\n  googleProvider,\r\n} from \"../../Firebase/FirebaseUtil\";\r\n\r\nexport function* getSnapshot(userAuth){\r\n    try{\r\n        const userRef = yield call(createUserProfileDocument, userAuth);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(\r\n          signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n    }catch(error){\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n   yield getSnapshot(user)\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\nexport function* signInWithEmail(email,password){\r\n    try{\r\n        const {user}=yield auth.signInWithEmailAndPassword(email,password)\r\n        yield put(getSnapshot(user))\r\n    }\r\n    catch(error){\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(actionTypes.GOOGLESIGNINSTART, signInWithGoogle);\r\n}\r\nexport function* userSaga() {\r\n  yield all([call(onGoogleSignInStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
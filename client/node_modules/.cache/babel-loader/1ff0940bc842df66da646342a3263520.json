{"ast":null,"code":"import { takeEvery, call } from \"redux-saga/effects\";\nimport { actionsTypes } from \"../Shop/actionTypes\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../Firebase/FirebaseUtil\";\nimport { FetchCollectionSuccess, FetchCollectionFailure } from \"./shopAction\";\nexport function* fetchCollectionAsync() {\n  yield console.log(\"i am fired\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionSnapshotToMap, snapshot);\n  } catch {} // collectionRef\n  //   .get()\n  //   .then((snapshot) => {\n  //     const collectionMap = convertCollectionSnapshotToMap(snapshot);\n  //     dispatch(FetchCollectionSuccess(collectionMap));\n  //   })\n  //   .catch((error) => dispatch(FetchCollectionFailure(error.message)));\n\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(actionsTypes.FETCHCOLLECTIONSSTARTS, fetchCollectionAsync);\n}","map":{"version":3,"sources":["D:/Reactjs 2/crown-clothing-v3/src/Redux/Shop/shopSaga.js"],"names":["takeEvery","call","actionsTypes","firestore","convertCollectionSnapshotToMap","FetchCollectionSuccess","FetchCollectionFailure","fetchCollectionAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","fetchCollectionStart","FETCHCOLLECTIONSSTARTS"],"mappings":"AAAA,SAAQA,SAAR,EAAkBC,IAAlB,QAA6B,oBAA7B;AACA,SAAUC,YAAV,QAA8B,qBAA9B;AACA,SAAQC,SAAR,EAAkBC,8BAAlB,QAAuD,6BAAvD;AACA,SAAQC,sBAAR,EAA+BC,sBAA/B,QAA4D,cAA5D;AAEA,OAAO,UAAUC,oBAAV,GAAgC;AACnC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAG;AAAC,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACJ,UAAMC,QAAQ,GAAE,MAAMF,aAAa,CAACG,GAAd,EAAtB;AACA,UAAMC,cAAc,GAAC,MAAMb,IAAI,CAACG,8BAAD,EAAgCQ,QAAhC,CAA/B;AAA0E,GAF1E,CAGA,MAAK,CAAE,CAN4B,CAQnC;AACA;AACA;AACA;AACA;AACA;AACA;;AACH;AACD,OAAO,UAAUG,oBAAV,GAAgC;AACnC,QAAMf,SAAS,CAACE,YAAY,CAACc,sBAAd,EAAqCT,oBAArC,CAAf;AACH","sourcesContent":["import {takeEvery,call} from \"redux-saga/effects\";\r\nimport  { actionsTypes } from \"../Shop/actionTypes\";\r\nimport {firestore,convertCollectionSnapshotToMap} from \"../../Firebase/FirebaseUtil\";\r\nimport {FetchCollectionSuccess,FetchCollectionFailure} from \"./shopAction\";\r\n\r\nexport function* fetchCollectionAsync(){\r\n    yield console.log(\"i am fired\");\r\n\r\n    try{const collectionRef = firestore.collection(\"collections\");\r\n    const snapshot= yield collectionRef.get();\r\n    const collectionsMap=yield call(convertCollectionSnapshotToMap,snapshot);}\r\n    catch{}\r\n\r\n    // collectionRef\r\n    //   .get()\r\n    //   .then((snapshot) => {\r\n    //     const collectionMap = convertCollectionSnapshotToMap(snapshot);\r\n    //     dispatch(FetchCollectionSuccess(collectionMap));\r\n    //   })\r\n    //   .catch((error) => dispatch(FetchCollectionFailure(error.message)));\r\n}\r\nexport function* fetchCollectionStart(){\r\n    yield takeEvery(actionsTypes.FETCHCOLLECTIONSSTARTS,fetchCollectionAsync)\r\n}"]},"metadata":{},"sourceType":"module"}